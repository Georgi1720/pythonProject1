# Дан список: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками
# (добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже.
# Главное: дополнить числа до двух разрядов нулём!

# line = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# line_1 = []
# line_2 = []
# my_dict = list(map(chr, range(ord('а'), ord('я')+1)))
# i = 0
# while i < len(line):                    # Добавляю кавычки и 0 если число с одной цифрой
#     if line[i].isalpha() == False:
#         line_1.append('"')
#         if len(line[i]) == 1:
#             line_1.append('0' + line[i])
#             line_1.append('"')
#             i += 1
#         elif len(line[i]) == 2:
#             Decompose = list(line[i])
#             if Decompose[0] == '+' or Decompose[0] == '-':
#                 Decompose.insert(1, '0')
#                 a = ''.join(Decompose)
#                 line_1.append(a)
#                 line_1.append('"')
#                 i += 1
#             else:
#                 a = ''.join(Decompose)
#                 line_1.append(a)
#                 line_1.append('"')
#                 i += 1
#     else:
#         line_1.append(line[i])
#         i += 1
#
#
# k = 0
# while k < len(line_1):
#     if line_1[k] == '"':
#         k += 1
#     elif line_1[k].isalpha() == False:
#         add = list('"' + line_1[k] + '"')
#         a = ''.join(add)
#         line_2.append(a)
#         k += 1
#     else:
#         line_2.append(line_1[k])
#         k += 1
#
# result = ' '.join(line_2)
#
#
# print(f'Оригинал  => {line}')
# print(f'Список c кавычками => {line_1}')
# print(f'Итоговый список =>  {result}')

# 4. Дан список, содержащий искажённые данные с должностями и именами сотрудников:
# ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида:
# 'Привет, Игорь!' Подумать,как получить имена сотрудников из элементов списка,
# как привести их к корректному виду. Можно ли при этом не создавать новый список?

# some_list = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# 4. Дан список, содержащий искажённые данные с должностями и именами сотрудников:
# ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида: 'Привет, Игорь!'
#  Подумать, как получить имена сотрудников из элементов списка, как привести их к корректному виду.
#   Можно ли при этом не создавать новый список?

# some_list = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
#
#
# def roll_call(line):
#     split_line = line.split(' ')
#     name = split_line[-1]
#     return name.title()
#
# for i in some_list:
#     print(f'Привет, {roll_call(i)}!')





